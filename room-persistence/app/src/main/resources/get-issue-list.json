[
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2836",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2836/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2836/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2836/events",
    "html_url": "https://github.com/square/retrofit/issues/2836",
    "id": 346211985,
    "node_id": "MDU6SXNzdWUzNDYyMTE5ODU=",
    "number": 2836,
    "title": "Missing Parameters to Server",
    "user": {
      "login": "jokerwt",
      "id": 33280456,
      "node_id": "MDQ6VXNlcjMzMjgwNDU2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/33280456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jokerwt",
      "html_url": "https://github.com/jokerwt",
      "followers_url": "https://api.github.com/users/jokerwt/followers",
      "following_url": "https://api.github.com/users/jokerwt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jokerwt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jokerwt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jokerwt/subscriptions",
      "organizations_url": "https://api.github.com/users/jokerwt/orgs",
      "repos_url": "https://api.github.com/users/jokerwt/repos",
      "events_url": "https://api.github.com/users/jokerwt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jokerwt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-07-31T14:25:19Z",
    "updated_at": "2018-07-31T14:27:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nI'm using retrofit to POST a \"application/x-www-form-urlencoded\" data to server for login, but i found that the retrofit did not successful send the data to server. I tested with postman the it work normally. Please advise\r\n\r\n<img width=\"724\" alt=\"screen shot 2018-07-31 at 10 21 46 pm\" src=\"https://user-images.githubusercontent.com/33280456/43465554-290f6956-9510-11e8-8a2c-40a12f4fd005.png\">\r\n\r\n<img width=\"783\" alt=\"screen shot 2018-07-31 at 10 20 24 pm\" src=\"https://user-images.githubusercontent.com/33280456/43465457-f909db1a-950f-11e8-8f22-4eb7377864b2.png\">\r\n\r\n--> POST http://url/api/api-user-login.php? http/1.1\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 63\r\nsubmit=send&userEmailAddress=test%40gmail.com&password=admin123\r\n--> END POST (63-byte body)\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2833",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2833/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2833/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2833/events",
    "html_url": "https://github.com/square/retrofit/issues/2833",
    "id": 343580750,
    "node_id": "MDU6SXNzdWUzNDM1ODA3NTA=",
    "number": 2833,
    "title": "Missed Proguard rule to not remove the Retrofit annotations",
    "user": {
      "login": "magnumrocha",
      "id": 333479,
      "node_id": "MDQ6VXNlcjMzMzQ3OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/333479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magnumrocha",
      "html_url": "https://github.com/magnumrocha",
      "followers_url": "https://api.github.com/users/magnumrocha/followers",
      "following_url": "https://api.github.com/users/magnumrocha/following{/other_user}",
      "gists_url": "https://api.github.com/users/magnumrocha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magnumrocha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magnumrocha/subscriptions",
      "organizations_url": "https://api.github.com/users/magnumrocha/orgs",
      "repos_url": "https://api.github.com/users/magnumrocha/repos",
      "events_url": "https://api.github.com/users/magnumrocha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magnumrocha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-07-23T10:44:13Z",
    "updated_at": "2018-07-23T11:21:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hey guys,\r\n\r\nDuring my project releasing, I've got some Issue with Proguard regarding the Retrofit2 rules that were not set to NOT remove the Retrofit Annotations.\r\n\r\nAfter some research, I've found this:\r\nhttps://raw.githubusercontent.com/square/retrofit/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro\r\n\r\nThe rule below solved my problem:\r\n\r\n````\r\n# Retain service method parameters when optimizing.\r\n-keepclassmembers,allowshrinking,allowobfuscation interface * {\r\n    @retrofit2.http.* <methods>;\r\n}\r\n````\r\n\r\nI think this rule is very important to be in Retrofit documentation.\r\n\r\nCheers,\r\nMagnum"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2830",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2830/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2830/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2830/events",
    "html_url": "https://github.com/square/retrofit/issues/2830",
    "id": 343068901,
    "node_id": "MDU6SXNzdWUzNDMwNjg5MDE=",
    "number": 2830,
    "title": "Login/Logout of online service using different username and password returns me to previous user session",
    "user": {
      "login": "nickymaggie",
      "id": 41465611,
      "node_id": "MDQ6VXNlcjQxNDY1NjEx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/41465611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickymaggie",
      "html_url": "https://github.com/nickymaggie",
      "followers_url": "https://api.github.com/users/nickymaggie/followers",
      "following_url": "https://api.github.com/users/nickymaggie/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickymaggie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickymaggie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickymaggie/subscriptions",
      "organizations_url": "https://api.github.com/users/nickymaggie/orgs",
      "repos_url": "https://api.github.com/users/nickymaggie/repos",
      "events_url": "https://api.github.com/users/nickymaggie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickymaggie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-07-20T11:13:34Z",
    "updated_at": "2018-07-20T11:13:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi, i've been tearing my banging my head for days this . After login/Logout of a my service on some webserver, with username and password (via Eclipse(Android)) there is no prob.However once i try to login with another username and password to the same service retrofit 2/OKHTTP    redirects me to details of previous login and this shouldn't happen. I don' t know if retrofit 2/Okhttp is storing details of my last PHPSESSID cookie. Please i have consulted stackoverflow for days .I even read a commentary 'here' by @swankjesse  saying retrofit/okhttp stores something @ application level. I'm just looking for a way to prevent the above situation from occuring . Any code or leads on this is greatly appreciated.\r\n\r\nHere is my login API:\r\n\r\n```\r\npublic class UconnectLoginApi {\r\n\tprivate static String ENDPOINT_URL = AppxionConfig.URL_GLOBAL;\r\n\tprivate static UconnectLoginInterface UconnectInterfaceHandler;\r\n\tprivate static Retrofit retrofit;\r\n\r\n\tpublic static UconnectLoginInterface getUconnectLogin(final String User, final String pass) {\r\n\r\n\t\tif (UconnectInterfaceHandler == null) {\r\n\t\t\tHttpLoggingInterceptor logging = new HttpLoggingInterceptor();\r\n\t\t\t// set your desired log level\r\n\t\t\tlogging.setLevel(Level.BODY);\r\n\r\n\t\t\tOkHttpClient.Builder httpClient = new OkHttpClient.Builder();\r\n\t\t\t// add your other interceptors â€¦\r\n\t\t\t// Define the interceptor, add authentication headers\r\n\t\t\tInterceptor interceptor = new Interceptor() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic okhttp3.Response intercept(Chain chain) throws IOException {\r\n\t\t\t\t\tRequest newRequest = chain.request().newBuilder()\r\n\t\t\t\t\t\t\t.addHeader(\"Authorization\", Credentials.basic(User, pass)).build();\r\n\r\n\t\t\t\t\treturn chain.proceed(newRequest);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\thttpClient.interceptors().add(interceptor);\r\n\t\t\t// add logging as last interceptor\r\n\t\t\thttpClient.addInterceptor(logging); // <-- this is the important\r\n\t\t\t\t\t\t\t\t\t\t\t\t// line!\r\n\r\n\t\t\tOkHttpClient client = httpClient.build();\r\n\t\t\tGson gson = new GsonBuilder().setLenient().create();\r\n\r\n\t\t\t// retrofit = new Retrofit.Builder().baseUrl(ENDPOINT_URL)\r\n\t\t\t// .addConverterFactory(GsonConverterFactory.create(gson)).build();\r\n\r\n\t\t\tretrofit = new Retrofit.Builder().baseUrl(ENDPOINT_URL)\r\n\t\t\t\t\t.addConverterFactory(GsonConverterFactory.create(gson)).client(client).build();\r\n\t\t\t// create here\r\n\t\t\tUconnectInterfaceHandler = retrofit.create(UconnectLoginInterface.class);\r\n\t\t}\r\n\t\treturn UconnectInterfaceHandler;\r\n\t}\r\n\r\n\tpublic interface UconnectLoginInterface {\r\n\r\n\t\t@POST(\"LoginUconnectModified.php\")\r\n\t\t@FormUrlEncoded\r\n\t\tCall<ResponseBody> UconnectLogin(@Field(\"UID\") String UID, @Field(\"IMEINo\") String IMEINo);\r\n\r\n\t}\r\n```\r\nMy Logout API is like so:\r\n```\r\nprivate static String ENDPOINT_URL = AppxionConfig.URL_GLOBAL;\r\n\t\tprivate static UconnectLogoutNowInterface UconnectInterfaceHandler;\r\n\t\tprivate static Retrofit retrofit;\r\n\t\t\r\n\t\tpublic static UconnectLogoutNowInterface getUconnectLogout(final String User, final String pass) {\r\n\r\n\t\t\tif (UconnectInterfaceHandler == null) {\r\n\t\t\t\tHttpLoggingInterceptor logging = new HttpLoggingInterceptor();\r\n\t\t\t\t// set your desired log level\r\n\t\t\t\tlogging.setLevel(Level.BODY);\r\n\r\n\t\t\t\tOkHttpClient.Builder httpClient = new OkHttpClient.Builder();\r\n\t\t\t\t// add your other interceptors â€¦\r\n\t\t\t\t// Define the interceptor, add authentication headers\r\n\t\t\t\tInterceptor interceptor = new Interceptor() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic okhttp3.Response intercept(Chain chain) throws IOException {\r\n\t\t\t\t\t\tRequest newRequest = chain.request().newBuilder()\r\n\t\t\t\t\t\t\t\t.addHeader(\"Authorization\", Credentials.basic(User, pass))\r\n\t\t\t\t\t\t\t\t.cacheControl(CacheControl.FORCE_NETWORK).build();\r\n\r\n\t\t\t\t\t\treturn chain.proceed(newRequest);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\thttpClient.interceptors().add(interceptor);\r\n\t\t\t\t// add logging as last interceptor\r\n\t\t\t\thttpClient.addInterceptor(logging); // <-- this is the important\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// line!\r\n\r\n\t\t\t\tOkHttpClient client = httpClient.build();\r\n\t\t\t\tGson gson = new GsonBuilder().setLenient().create();\r\n\r\n\t\t\t\tretrofit = new Retrofit.Builder().baseUrl(ENDPOINT_URL)\r\n\t\t\t\t\t\t.addConverterFactory(GsonConverterFactory.create(gson)).client(client).build();\r\n\t\t\t\t// create here\r\n\t\t\t\tUconnectInterfaceHandler = retrofit.create(UconnectLogoutNowInterface.class);\r\n\t\t\t}\r\n\t\t\treturn UconnectInterfaceHandler;\r\n\t\t}\r\n\t\tpublic interface UconnectLogoutNowInterface {\r\n\r\n\t\t\t@POST(\"UnicsMobileLogout.php\")\r\n\t\t\tCall<ResponseBody> UconnectLogoutNow();\r\n\r\n\t\t}\r\n```\r\nI create my retrofit instance like so then call from service in code:\r\n```\r\npublic static synchronized WebservicesViaRetrofit getInstance(Context con) {\r\n\t\tif (instance == null)\r\n\t\t\tinstance = new WebservicesViaRetrofit();\r\n\t\tinit(con);\r\n\r\n\t\treturn instance;\r\n\t}\r\n```\r\nThe PHPSESSID cookie look like so : \r\nPHPSESSID=c02ce5dba4d62b99d7a9841943aa21c0; path=/\r\n07-20 03:59:23.300:"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2829",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2829/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2829/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2829/events",
    "html_url": "https://github.com/square/retrofit/issues/2829",
    "id": 342816808,
    "node_id": "MDU6SXNzdWUzNDI4MTY4MDg=",
    "number": 2829,
    "title": "Get Path without the custom \"name\"",
    "user": {
      "login": "JavierSegoviaCordoba",
      "id": 7463564,
      "node_id": "MDQ6VXNlcjc0NjM1NjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7463564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JavierSegoviaCordoba",
      "html_url": "https://github.com/JavierSegoviaCordoba",
      "followers_url": "https://api.github.com/users/JavierSegoviaCordoba/followers",
      "following_url": "https://api.github.com/users/JavierSegoviaCordoba/following{/other_user}",
      "gists_url": "https://api.github.com/users/JavierSegoviaCordoba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JavierSegoviaCordoba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JavierSegoviaCordoba/subscriptions",
      "organizations_url": "https://api.github.com/users/JavierSegoviaCordoba/orgs",
      "repos_url": "https://api.github.com/users/JavierSegoviaCordoba/repos",
      "events_url": "https://api.github.com/users/JavierSegoviaCordoba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JavierSegoviaCordoba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-19T17:15:12Z",
    "updated_at": "2018-07-23T23:46:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I am trying to get the this string: \"users/by-name/{name}\"\r\n\r\nfrom here: @GET(\"users/by-name/{nameId}\"\r\n\r\nusing this: call.request().url().pathSegments();\r\n\r\nThe problem is I am getting the real name, and I would like to get it with \"{name}\".\r\n\r\nI tried a lot of methods inside .url(), but I can't get it.\r\n\r\nIs it possible?"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2822",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2822/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2822/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2822/events",
    "html_url": "https://github.com/square/retrofit/issues/2822",
    "id": 339694418,
    "node_id": "MDU6SXNzdWUzMzk2OTQ0MTg=",
    "number": 2822,
    "title": "Feature Request for logging annotation",
    "user": {
      "login": "rupinderjeet",
      "id": 14011726,
      "node_id": "MDQ6VXNlcjE0MDExNzI2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14011726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rupinderjeet",
      "html_url": "https://github.com/rupinderjeet",
      "followers_url": "https://api.github.com/users/rupinderjeet/followers",
      "following_url": "https://api.github.com/users/rupinderjeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/rupinderjeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rupinderjeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rupinderjeet/subscriptions",
      "organizations_url": "https://api.github.com/users/rupinderjeet/orgs",
      "repos_url": "https://api.github.com/users/rupinderjeet/repos",
      "events_url": "https://api.github.com/users/rupinderjeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rupinderjeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-10T05:05:37Z",
    "updated_at": "2018-07-28T21:26:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "[X] Feature Request\r\n\r\nHello. \r\n\r\nI am using this library with `http-logging-interceptor` to log(`level=body`) my api calls.\r\n\r\nHowever, there are some api calls that need to be made very frequently according to my situation. These calls are made every 15-20 seconds(assuming user allows this). Using the app while making these api calls mixes it with regular api calls. I know it might seem bad to call server in such short interval. These api calls make it very difficult for me to track my logcat,  it gets too much crowded.\r\n\r\nI think I can just create another instance of `retrofit` with another instance of `OkHttpClient`, and prevent this by using `level=basic` in this. But, is this right?\r\n\r\nI want to request you to make an annotation that can be used in API Client Interface to change the log-level for some calls. e.g.\r\n\r\n    @HttpLog(level = basic)   // body, none, headers\r\n    @POST(\"fruits/hybrid\")\r\n    Call<Response<Fruit> addRandomHybridFruit (\r\n            @HeaderMap Map<String, String> headerMap,\r\n            @Body HybridFruitRequest request\r\n    );\r\n\r\nIt will be very helpful for me, but I understand as I am singled out to request this, it might not seem worth a feature request. I wanted to try.\r\n\r\nThanks for your work."
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2821",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2821/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2821/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2821/events",
    "html_url": "https://github.com/square/retrofit/issues/2821",
    "id": 339290705,
    "node_id": "MDU6SXNzdWUzMzkyOTA3MDU=",
    "number": 2821,
    "title": " The exception of mergeDelayError in Rxjava and Retrofit",
    "user": {
      "login": "MoMask",
      "id": 20473909,
      "node_id": "MDQ6VXNlcjIwNDczOTA5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20473909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MoMask",
      "html_url": "https://github.com/MoMask",
      "followers_url": "https://api.github.com/users/MoMask/followers",
      "following_url": "https://api.github.com/users/MoMask/following{/other_user}",
      "gists_url": "https://api.github.com/users/MoMask/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MoMask/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MoMask/subscriptions",
      "organizations_url": "https://api.github.com/users/MoMask/orgs",
      "repos_url": "https://api.github.com/users/MoMask/repos",
      "events_url": "https://api.github.com/users/MoMask/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MoMask/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 273286532,
        "node_id": "MDU6TGFiZWwyNzMyODY1MzI=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Bug",
        "name": "Bug",
        "color": "e11d21",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-07-09T03:08:14Z",
    "updated_at": "2018-07-28T21:34:40Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\nI encountered this requirement. In an activity, I need to request four network interfaces. In order to facilitate the use, the mergeDelayError operation of Rxjava conforms to a request, but the actual situation is that when one of the requests is wrong, it will cause Retrofit to trigger. RxJavaCallAdapterFactory this class. This caused the subscription to be cancelled, which prevented me from requesting requests from other networks.\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2815",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2815/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2815/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2815/events",
    "html_url": "https://github.com/square/retrofit/issues/2815",
    "id": 337672619,
    "node_id": "MDU6SXNzdWUzMzc2NzI2MTk=",
    "number": 2815,
    "title": "error: retrofit2.adapter.rxjava2.HttpException: HTTP 404 Not Found",
    "user": {
      "login": "kldMohammed",
      "id": 17613367,
      "node_id": "MDQ6VXNlcjE3NjEzMzY3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17613367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kldMohammed",
      "html_url": "https://github.com/kldMohammed",
      "followers_url": "https://api.github.com/users/kldMohammed/followers",
      "following_url": "https://api.github.com/users/kldMohammed/following{/other_user}",
      "gists_url": "https://api.github.com/users/kldMohammed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kldMohammed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kldMohammed/subscriptions",
      "organizations_url": "https://api.github.com/users/kldMohammed/orgs",
      "repos_url": "https://api.github.com/users/kldMohammed/repos",
      "events_url": "https://api.github.com/users/kldMohammed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kldMohammed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-02T21:38:07Z",
    "updated_at": "2018-07-04T12:12:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "when i use rxjava i got this error\r\n\r\n**error: retrofit2.adapter.rxjava2.HttpException: HTTP 404 Not Found\r\nat retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(BodyObservable.java:54)\r\n07-02 23:53:39.876 18974-20433/com.susham.salamtk W/System.err:     at retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(BodyObservable.java:37)\r\n        at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:44)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12036)\r\n        at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12036)\r\n        at io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n        at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:579)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:269)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n07-02 23:53:39.876 18974-20433/com.susham.salamtk W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n07-02 23:53:39.877 18974-20433/com.susham.salamtk W/System.err:     at java.lang.Thread.run(Thread.java:818)**\r\n\r\nthis is my configration\r\n\r\nwithout rxjava adapter it works fine i try it both in the same activity to be sure it work \r\n\r\n @GET(\"api/Ambulancetypes\")\r\n    fun getAmbulanceTypes(): Observable<List<Ambulancetypes>>\r\n//\r\n\r\n private val builder = Retrofit.Builder()\r\n        .baseUrl(BASE_URL)\r\n        .addConverterFactory(GsonConverterFactory.create())\r\n        .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\r\n        .client(okHttpClient.build())\r\n    var retrofit = builder.build()\r\n    \r\n//\r\n apiService.getAmbulanceTypes()\r\n            .subscribeOn(Schedulers.io())\r\n            .subscribeOn(AndroidSchedulers.mainThread())\r\n            .subscribe(this::handleResponse, this::handleError)\r\n\r\n// \r\n\r\n implementation \"com.squareup.retrofit2:retrofit:$retrofit_version\"\r\n\r\n     implementation \"com.squareup.retrofit2:adapter-rxjava2:$retrofit_version\"\r\n    implementation \"com.squareup.retrofit2:converter-gson:$retrofit_version\"\r\n\r\n\r\next{\r\n    retrofit_version = \"2.4.0\"\r\n}"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2812",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2812/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2812/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2812/events",
    "html_url": "https://github.com/square/retrofit/issues/2812",
    "id": 336875752,
    "node_id": "MDU6SXNzdWUzMzY4NzU3NTI=",
    "number": 2812,
    "title": "Why I can't use Request's tag field.",
    "user": {
      "login": "FCBXavi",
      "id": 14178864,
      "node_id": "MDQ6VXNlcjE0MTc4ODY0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14178864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FCBXavi",
      "html_url": "https://github.com/FCBXavi",
      "followers_url": "https://api.github.com/users/FCBXavi/followers",
      "following_url": "https://api.github.com/users/FCBXavi/following{/other_user}",
      "gists_url": "https://api.github.com/users/FCBXavi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FCBXavi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FCBXavi/subscriptions",
      "organizations_url": "https://api.github.com/users/FCBXavi/orgs",
      "repos_url": "https://api.github.com/users/FCBXavi/repos",
      "events_url": "https://api.github.com/users/FCBXavi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FCBXavi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-29T06:13:55Z",
    "updated_at": "2018-07-05T00:44:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I want to cancel all request for Activity or Fragment  during the end of their life style. In OkHttp, I can use Request.Builder.setTag method to setTag for every Request.\r\n \r\nAnd then, in my client, I add this method:\r\n\r\n    public static void cancelRequest(Object tag) {\r\n        if (tag == null) {\r\n            return;\r\n        }\r\n        List<Call> queuedCalls = mClient.dispatcher().queuedCalls();\r\n        for (Call call : queuedCalls) {\r\n            if (tag.equals(call.request().tag())) {\r\n                call.cancel();\r\n            }\r\n        }\r\n        List<Call> runningCalls = mClient.dispatcher().runningCalls();\r\n        for (Call call : runningCalls) {\r\n            if (tag.equals(call.request().tag())) {\r\n                call.cancel();\r\n            }\r\n        }\r\n    }\r\nAnd in BaseActivity and BaseFragment's onDestroy method, I can do this:\r\n\r\n    APIRestClient.cancelRequset(this);    \r\n\r\nI think it's useful and convenient.\r\nBut in Retrofit, I can't use field tag. So how can I do above in Retrofit efficiently and can you give me some suggestions？ Thanks！😊"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2803",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2803/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2803/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2803/events",
    "html_url": "https://github.com/square/retrofit/issues/2803",
    "id": 334385172,
    "node_id": "MDU6SXNzdWUzMzQzODUxNzI=",
    "number": 2803,
    "title": "When call Delete reqeust first time，The next call throws under Exception",
    "user": {
      "login": "MilkCatLZ",
      "id": 3324357,
      "node_id": "MDQ6VXNlcjMzMjQzNTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3324357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MilkCatLZ",
      "html_url": "https://github.com/MilkCatLZ",
      "followers_url": "https://api.github.com/users/MilkCatLZ/followers",
      "following_url": "https://api.github.com/users/MilkCatLZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/MilkCatLZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MilkCatLZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MilkCatLZ/subscriptions",
      "organizations_url": "https://api.github.com/users/MilkCatLZ/orgs",
      "repos_url": "https://api.github.com/users/MilkCatLZ/repos",
      "events_url": "https://api.github.com/users/MilkCatLZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MilkCatLZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 273285289,
        "node_id": "MDU6TGFiZWwyNzMyODUyODk=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Needs%20Info",
        "name": "Needs Info",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-06-21T08:16:17Z",
    "updated_at": "2018-06-21T12:55:10Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "When call Delete reqeust first time，The next call throws under Exception\r\nAnd the [\"message\"]... is the Delete respon body. why\r\n\r\n\r\n`06-21 16:09:19.481 30903-30903/shy.car.sdk W/System.err: java.net.ProtocolException: Unexpected status line: {\"message\":\"\\u64cd\\u4f5c\\u6210\\u529f\"}HTTP/1.1 201 Created\r\n06-21 16:09:19.485 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.StatusLine.parse(StatusLine.java:69)\r\n        at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\r\n06-21 16:09:19.486 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n06-21 16:09:19.487 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n06-21 16:09:19.488 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n06-21 16:09:19.489 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:145)\r\n06-21 16:09:19.490 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at com.base.network.retrofit.BaseInterceptor.intercept(BaseInterceptor.kt:33)\r\n06-21 16:09:19.491 30903-30903/shy.car.sdk W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n06-21 16:09:19.492 30903-30903/shy.car.sdk W/System.err:     at okhttp3.RealCall.execute(RealCall.java:77)\r\n        at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n        at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:42)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12005)\r\n06-21 16:09:19.493 30903-30903/shy.car.sdk W/System.err:     at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12005)\r\n06-21 16:09:19.494 30903-30903/shy.car.sdk W/System.err:     at io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n06-21 16:09:19.496 30903-30903/shy.car.sdk W/System.err:     at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:571)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n06-21 16:09:19.497 30903-30903/shy.car.sdk W/System.err:     at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n06-21 16:09:19.498 30903-30903/shy.car.sdk W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)`"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2785",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2785/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2785/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2785/events",
    "html_url": "https://github.com/square/retrofit/issues/2785",
    "id": 331304959,
    "node_id": "MDU6SXNzdWUzMzEzMDQ5NTk=",
    "number": 2785,
    "title": "(enhancement request) Using gsonFactory for generic types is not supported",
    "user": {
      "login": "pedro-teran-mojix-com",
      "id": 33126155,
      "node_id": "MDQ6VXNlcjMzMTI2MTU1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33126155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedro-teran-mojix-com",
      "html_url": "https://github.com/pedro-teran-mojix-com",
      "followers_url": "https://api.github.com/users/pedro-teran-mojix-com/followers",
      "following_url": "https://api.github.com/users/pedro-teran-mojix-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedro-teran-mojix-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedro-teran-mojix-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedro-teran-mojix-com/subscriptions",
      "organizations_url": "https://api.github.com/users/pedro-teran-mojix-com/orgs",
      "repos_url": "https://api.github.com/users/pedro-teran-mojix-com/repos",
      "events_url": "https://api.github.com/users/pedro-teran-mojix-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedro-teran-mojix-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 273285289,
        "node_id": "MDU6TGFiZWwyNzMyODUyODk=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Needs%20Info",
        "name": "Needs Info",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-11T18:44:18Z",
    "updated_at": "2018-06-11T18:46:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Introduction**\r\nas it is known GSON doesn't support generic types by default so if for example I want to deserialize\r\nsomething like \r\n```\r\npublic class  FooResponse <T> {\r\n    @SerializedName(\"total\")\r\n    private int total;\r\n    @SerializedName(\"results\")\r\n    ArrayList<T> results;\r\n}\r\n```\r\nand we use a class \r\n```\r\npublic class Food {\r\n    @SerializedName(\"name\")\r\n    private String name;\r\n    @SerializedName(\"quantity\")\r\n    private String quantity;\r\n}\r\n```\r\nand we call json    \r\n`FooResponse<Food> response = gson.fromJson(rawData, FooResponse.class);\r\n`\r\nit will fail. miserably. but furtunatly there are some work arround on gson like for example calling it like this:\r\n``FooResponse<Food> response = gson.fromJson(rawPerson, new TypeToken<FooResponse<Food>>(){}.getType())`\r\n\r\n**issue in retrofit**\r\n\r\nusing GsonConverterFactory.create(new GsonBuilder().\r\n....\r\n.create()));\r\n\r\nthere is no way to support generic types using gson. since there is no way to tell gson the type of the response. as gson  injected in retrofit build time.\r\n\r\n\r\n** Expected behaviour ** \r\n\r\nto have an alternative GsonFactory or  an optional parameter to define that we are using t types. or at least a way to deserialize this requests. using gson. with some more boiler plate code.   "
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2781",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2781/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2781/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2781/events",
    "html_url": "https://github.com/square/retrofit/issues/2781",
    "id": 329907754,
    "node_id": "MDU6SXNzdWUzMjk5MDc3NTQ=",
    "number": 2781,
    "title": "Why does ExceptionCatchingRequestBody extend ResponseBody?",
    "user": {
      "login": "tanglie1993",
      "id": 8639024,
      "node_id": "MDQ6VXNlcjg2MzkwMjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8639024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tanglie1993",
      "html_url": "https://github.com/tanglie1993",
      "followers_url": "https://api.github.com/users/tanglie1993/followers",
      "following_url": "https://api.github.com/users/tanglie1993/following{/other_user}",
      "gists_url": "https://api.github.com/users/tanglie1993/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tanglie1993/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tanglie1993/subscriptions",
      "organizations_url": "https://api.github.com/users/tanglie1993/orgs",
      "repos_url": "https://api.github.com/users/tanglie1993/repos",
      "events_url": "https://api.github.com/users/tanglie1993/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tanglie1993/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-06T15:01:35Z",
    "updated_at": "2018-06-06T18:03:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The inner class ExceptionCatchingRequestBody  in  retrofit/retrofit/src/main/java/retrofit2/OkHttpCall.java extends ResponseBody. I don't understand why it is named ExceptionCatchingRequestBody instead of ExceptionCatchingResponseBody.  Is it a bug?"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2780",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2780/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2780/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2780/events",
    "html_url": "https://github.com/square/retrofit/issues/2780",
    "id": 329008037,
    "node_id": "MDU6SXNzdWUzMjkwMDgwMzc=",
    "number": 2780,
    "title": "The enqueue call is made on a background thread and after that onResponse is not triggered. but okHttp shows the request is completed successfully.",
    "user": {
      "login": "dimpybadra",
      "id": 11270208,
      "node_id": "MDQ6VXNlcjExMjcwMjA4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11270208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimpybadra",
      "html_url": "https://github.com/dimpybadra",
      "followers_url": "https://api.github.com/users/dimpybadra/followers",
      "following_url": "https://api.github.com/users/dimpybadra/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimpybadra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimpybadra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimpybadra/subscriptions",
      "organizations_url": "https://api.github.com/users/dimpybadra/orgs",
      "repos_url": "https://api.github.com/users/dimpybadra/repos",
      "events_url": "https://api.github.com/users/dimpybadra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimpybadra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-06-04T11:01:55Z",
    "updated_at": "2018-06-06T07:44:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The enqueue call is made on a background thread and after that onResponse is not triggered.\r\nbut okHttp shows the request is completed successfully.\r\npublic static void gettabData(final NetworkOperationListener<OpShiftModel[]> listener) {\r\n\r\n        Call<OpShiftModel[]> tabCall = opShiftService.getTabData(getAuthHeader());\r\n        tabCall.enqueue(new Callback<OpShiftModel[]>() {\r\n\r\n            @Override\r\n            public void onResponse(Call<OpShiftModel[]> call, Response<OpShiftModel[]> response) {\r\n                try {\r\n                    listener.onSuccess(response.body());\r\n                } catch (NullPointerException e) {\r\n                    onFailure(call, e);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<OpShiftModel[]> call, Throwable throwable) {\r\n\r\n            }\r\n        });}\r\nhttp request is successfull."
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2773",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2773/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2773/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2773/events",
    "html_url": "https://github.com/square/retrofit/issues/2773",
    "id": 328284534,
    "node_id": "MDU6SXNzdWUzMjgyODQ1MzQ=",
    "number": 2773,
    "title": "Feature Request: \"IllegalArgumentException: Path parameter XXX value must not be null.\" should include url",
    "user": {
      "login": "tir38",
      "id": 1980553,
      "node_id": "MDQ6VXNlcjE5ODA1NTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1980553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tir38",
      "html_url": "https://github.com/tir38",
      "followers_url": "https://api.github.com/users/tir38/followers",
      "following_url": "https://api.github.com/users/tir38/following{/other_user}",
      "gists_url": "https://api.github.com/users/tir38/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tir38/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tir38/subscriptions",
      "organizations_url": "https://api.github.com/users/tir38/orgs",
      "repos_url": "https://api.github.com/users/tir38/repos",
      "events_url": "https://api.github.com/users/tir38/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tir38/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-05-31T20:25:53Z",
    "updated_at": "2018-07-27T02:50:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I was not properly setting a `Path` parameter and saw:\r\n\r\n`Caused by: java.lang.IllegalArgumentException: Path parameter \"user_id\" value must not be null.`\r\n\r\nThe problem is that I have ~20 web requests all with the `user_id` path parameter. I have no easy way to diagnose which one I'm calling incorrectly. It would be great if that error message included the url.\r\n\r\nI think it should be pretty easy to update `Path` to:\r\n\r\n```\r\nstatic final class Path<T> extends ParameterHandler<T> {\r\n    @Override\r\n    void apply(RequestBuilder builder, @Nullable T value) throws IOException {\r\n        if (value == null) {\r\n            throw new IllegalArgumentException(\r\n                    \"Path parameter \\\"\" + name + \"\\\" value must not be null in request \"\r\n                            + builder.baseUrl + builder.relativeUrl);\r\n        }\r\n        builder.addPathParam(name, valueConverter.convert(value), encoded);\r\n    }\r\n}\r\n```\r\n\r\nProbably worth updating all `ParameterHandler`s that throw when value is null.\r\n\r\n\r\nFor the record, calling a service method inside RxJava stream results in a stack trace that isn't very helpful:\r\n\r\n```\r\n   io.reactivex.exceptions.OnErrorNotImplementedException: Path parameter \"user_id\" value must not be null.\r\n        at io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:704)\r\n        at io.reactivex.internal.functions.Functions$OnErrorMissingConsumer.accept(Functions.java:701)\r\n        at io.reactivex.internal.observers.ConsumerSingleObserver.onError(ConsumerSingleObserver.java:47)\r\n        at io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver.run(SingleObserveOn.java:79)\r\n        at io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:109)\r\n        at android.os.Handler.handleCallback(Handler.java:751)\r\n        at android.os.Handler.dispatchMessage(Handler.java:95)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6121)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:779)\r\n     Caused by: java.lang.IllegalArgumentException: Path parameter \"user_id\" value must not be null.\r\n        at retrofit2.ParameterHandler$Path.apply(ParameterHandler.java:96)\r\n        at retrofit2.ServiceMethod.toRequest(ServiceMethod.java:111)\r\n        at retrofit2.OkHttpCall.createRawCall(OkHttpCall.java:184)\r\n        at retrofit2.OkHttpCall.execute(OkHttpCall.java:168)\r\n        at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:41)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12025)\r\n        at io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n        at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:571)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:272)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2771",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2771/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2771/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2771/events",
    "html_url": "https://github.com/square/retrofit/pull/2771",
    "id": 328047096,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxNjgzMzM1",
    "number": 2771,
    "title": "Upgrade RxJava2 to 2.1.14, Upgrade AssertJ to 2.9.1",
    "user": {
      "login": "bednar",
      "id": 455137,
      "node_id": "MDQ6VXNlcjQ1NTEzNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/455137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bednar",
      "html_url": "https://github.com/bednar",
      "followers_url": "https://api.github.com/users/bednar/followers",
      "following_url": "https://api.github.com/users/bednar/following{/other_user}",
      "gists_url": "https://api.github.com/users/bednar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bednar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bednar/subscriptions",
      "organizations_url": "https://api.github.com/users/bednar/orgs",
      "repos_url": "https://api.github.com/users/bednar/repos",
      "events_url": "https://api.github.com/users/bednar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bednar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-31T08:45:23Z",
    "updated_at": "2018-06-10T10:13:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/square/retrofit/pulls/2771",
      "html_url": "https://github.com/square/retrofit/pull/2771",
      "diff_url": "https://github.com/square/retrofit/pull/2771.diff",
      "patch_url": "https://github.com/square/retrofit/pull/2771.patch"
    },
    "body": "This Pull request also cover the RxJava2 API changes between 2.0.0 and 2.1.14\r\n\r\n-  2.0.6: introduces specific exception wrappers to help distinguish and track down what was happening the time of the error = exceptions are wrapped in UndeliverableException - [additional info](https://github.com/ReactiveX/RxJava/wiki/What%27s-different-in-2.0#error-handling)\r\n- 2.0.7: a non-positive Subscription.request() will not stop the current stream but signal an error via RxJavaPlugins.onError  - [additional info](https://github.com/ReactiveX/RxJava/wiki/What%27s-different-in-2.0#reactive-streams-compliance)\r\n\r\nHi @JakeWharton, it is correct change for you?"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2768",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2768/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2768/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2768/events",
    "html_url": "https://github.com/square/retrofit/issues/2768",
    "id": 327180308,
    "node_id": "MDU6SXNzdWUzMjcxODAzMDg=",
    "number": 2768,
    "title": "I need [{},{},{}] instead of [\"{}\",\"{}\",\"{}\"]",
    "user": {
      "login": "Whatgbc",
      "id": 29140281,
      "node_id": "MDQ6VXNlcjI5MTQwMjgx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29140281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Whatgbc",
      "html_url": "https://github.com/Whatgbc",
      "followers_url": "https://api.github.com/users/Whatgbc/followers",
      "following_url": "https://api.github.com/users/Whatgbc/following{/other_user}",
      "gists_url": "https://api.github.com/users/Whatgbc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Whatgbc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Whatgbc/subscriptions",
      "organizations_url": "https://api.github.com/users/Whatgbc/orgs",
      "repos_url": "https://api.github.com/users/Whatgbc/repos",
      "events_url": "https://api.github.com/users/Whatgbc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Whatgbc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 273285289,
        "node_id": "MDU6TGFiZWwyNzMyODUyODk=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Needs%20Info",
        "name": "Needs Info",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-29T06:03:55Z",
    "updated_at": "2018-05-29T15:43:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "@FormUrlEncoded\r\n    @POST(url)\r\n    Observable<Object> getOrderDetailData(@FieldMap Map<String,String> map,@Field(\"data[]\") List<DetailEntity> list);\r\n\r\nand log shows \"data\" is [\"{t.tostring}\",\"{t.tostring}\",\"{t.tostring}\"], I don't need quotation, what should I  do"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2764",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2764/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2764/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2764/events",
    "html_url": "https://github.com/square/retrofit/issues/2764",
    "id": 326405482,
    "node_id": "MDU6SXNzdWUzMjY0MDU0ODI=",
    "number": 2764,
    "title": "How to post object parameters ? ",
    "user": {
      "login": "ismailtosun",
      "id": 5730271,
      "node_id": "MDQ6VXNlcjU3MzAyNzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5730271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ismailtosun",
      "html_url": "https://github.com/ismailtosun",
      "followers_url": "https://api.github.com/users/ismailtosun/followers",
      "following_url": "https://api.github.com/users/ismailtosun/following{/other_user}",
      "gists_url": "https://api.github.com/users/ismailtosun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ismailtosun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ismailtosun/subscriptions",
      "organizations_url": "https://api.github.com/users/ismailtosun/orgs",
      "repos_url": "https://api.github.com/users/ismailtosun/repos",
      "events_url": "https://api.github.com/users/ismailtosun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ismailtosun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-25T07:07:25Z",
    "updated_at": "2018-07-12T18:58:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "My parameters look like this : \r\n```\r\nRequest\r\n{\r\n                \"ProcName\" :\"BR_SP_BRN_GET_STORE_ACTIVE_SHIPMENTS\",\r\n                \"Parameters\": [\r\n    {\r\n      \"Name\": \"StoreCode\",\r\n      \"Value\": \"B201\"\r\n    }\r\n  ]\r\n}\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2760",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2760/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2760/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2760/events",
    "html_url": "https://github.com/square/retrofit/issues/2760",
    "id": 324274287,
    "node_id": "MDU6SXNzdWUzMjQyNzQyODc=",
    "number": 2760,
    "title": "How to send file along with Java Object using @Multipart",
    "user": {
      "login": "Vijaykumarj",
      "id": 26544969,
      "node_id": "MDQ6VXNlcjI2NTQ0OTY5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26544969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vijaykumarj",
      "html_url": "https://github.com/Vijaykumarj",
      "followers_url": "https://api.github.com/users/Vijaykumarj/followers",
      "following_url": "https://api.github.com/users/Vijaykumarj/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vijaykumarj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vijaykumarj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vijaykumarj/subscriptions",
      "organizations_url": "https://api.github.com/users/Vijaykumarj/orgs",
      "repos_url": "https://api.github.com/users/Vijaykumarj/repos",
      "events_url": "https://api.github.com/users/Vijaykumarj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vijaykumarj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-05-18T05:24:40Z",
    "updated_at": "2018-05-18T05:24:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "\r\nI want upload a file along with Java object using Multipart.  In this java object have more than 10 members.\r\nAny one guide to me, how i can achieve this one."
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2741",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2741/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2741/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2741/events",
    "html_url": "https://github.com/square/retrofit/issues/2741",
    "id": 317984113,
    "node_id": "MDU6SXNzdWUzMTc5ODQxMTM=",
    "number": 2741,
    "title": "@QueryMap can not process null values for keys",
    "user": {
      "login": "genxlogics",
      "id": 23261817,
      "node_id": "MDQ6VXNlcjIzMjYxODE3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/23261817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/genxlogics",
      "html_url": "https://github.com/genxlogics",
      "followers_url": "https://api.github.com/users/genxlogics/followers",
      "following_url": "https://api.github.com/users/genxlogics/following{/other_user}",
      "gists_url": "https://api.github.com/users/genxlogics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/genxlogics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/genxlogics/subscriptions",
      "organizations_url": "https://api.github.com/users/genxlogics/orgs",
      "repos_url": "https://api.github.com/users/genxlogics/repos",
      "events_url": "https://api.github.com/users/genxlogics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/genxlogics/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-04-26T11:17:34Z",
    "updated_at": "2018-07-24T00:55:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\nI am using retrofit2 : 2.3.0\r\nI am passing a HashMap as below which include null values for two params. i am getting error as \"java.lang.IllegalArgumentException: Query map contained null value for key &#39;client_number&#39;.\r\n\r\nboth \"passport\" and \"client_number\" are null values.\r\n\r\n`HashMap<String, String> ids = new HashMap<>();\r\n            ids.put(\"rsa_id_value\", id);\r\n            ids.put(\"passport_number\", passport);\r\n            ids.put(\"client_number\", clientNumber);\r\n            Response<List<QuoteEligibility>> response = mstiService.getEligibility(ids).execute();`\r\n\r\ninterface defined as \r\n\r\n`@GET(\"personal/eligibility\")\r\n    Call<List<QuoteEligibility>> getEligibility(@QueryMap(encoded = true) Map<String,String> options);`\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2739",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2739/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2739/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2739/events",
    "html_url": "https://github.com/square/retrofit/issues/2739",
    "id": 317562891,
    "node_id": "MDU6SXNzdWUzMTc1NjI4OTE=",
    "number": 2739,
    "title": "How to send empty object",
    "user": {
      "login": "vipulasri",
      "id": 7822179,
      "node_id": "MDQ6VXNlcjc4MjIxNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7822179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vipulasri",
      "html_url": "https://github.com/vipulasri",
      "followers_url": "https://api.github.com/users/vipulasri/followers",
      "following_url": "https://api.github.com/users/vipulasri/following{/other_user}",
      "gists_url": "https://api.github.com/users/vipulasri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vipulasri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vipulasri/subscriptions",
      "organizations_url": "https://api.github.com/users/vipulasri/orgs",
      "repos_url": "https://api.github.com/users/vipulasri/repos",
      "events_url": "https://api.github.com/users/vipulasri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vipulasri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-25T10:11:22Z",
    "updated_at": "2018-04-26T06:12:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I am trying to send empty object but retrofit clears out the param with empty or null values.\r\nHow to make retrofit send empty object or array.\r\n\r\nUse case: \r\nI am sending `additional_fields` array param as: `additional_fields[0]=2`, `additional_fields[1]=3` using `@Field` etc.\r\nwhich is working perfectly. But when I am sending `additional_fields=[]` with an empty array, retrofit clears out this field and doesn't send it. \r\nI am doing it in `PATCH` call as the user can update its preferences for `additional_fields` which can have some value or no value."
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2732",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2732/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2732/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2732/events",
    "html_url": "https://github.com/square/retrofit/issues/2732",
    "id": 314132636,
    "node_id": "MDU6SXNzdWUzMTQxMzI2MzY=",
    "number": 2732,
    "title": "Integrate with the OkHttp's analytics API",
    "user": {
      "login": "bric3",
      "id": 803621,
      "node_id": "MDQ6VXNlcjgwMzYyMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/803621?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bric3",
      "html_url": "https://github.com/bric3",
      "followers_url": "https://api.github.com/users/bric3/followers",
      "following_url": "https://api.github.com/users/bric3/following{/other_user}",
      "gists_url": "https://api.github.com/users/bric3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bric3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bric3/subscriptions",
      "organizations_url": "https://api.github.com/users/bric3/orgs",
      "repos_url": "https://api.github.com/users/bric3/repos",
      "events_url": "https://api.github.com/users/bric3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bric3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-13T14:36:46Z",
    "updated_at": "2018-06-25T09:44:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "What kind of issue is this?\r\n\r\n - [ ] Question. This issue tracker is not the place for questions. If you want to ask how to do\r\n       something, or to understand why something isn't working the way you expect it to, use Stack\r\n       Overflow. https://stackoverflow.com/questions/tagged/retrofit\r\n\r\n - [ ] Bug report. If you’ve found a bug, spend the time to write a failing test. Bugs with tests\r\n       get fixed. Here’s an example: https://gist.github.com/swankjesse/6608b4713ad80988cdc9\r\n\r\n - [X] Feature Request. Start by telling us what problem you’re trying to solve. Often a solution\r\n       already exists! Don’t send pull requests to implement new features without first getting our\r\n       support. Sometimes we leave features out on purpose to keep the project small.\r\n------------------\r\n\r\nFollowing the analytics API that is being build within okhttp (https://github.com/square/okhttp/issues/270), I would like to capture metrics per _mapped_ path / route.\r\n\r\n#### tl;dr\r\n\r\nCurrently it is not possible to have metrics per route in OkHttp's `EventListener` without parsing the URL against a known list of path (that has to populated from the interface or somewhere else.\r\nThis inefficient on several aspects.\r\n\r\nI would like retrofit to communicate the route _context_ to OkHttp, inorder to access the in the EventListener.\r\n\r\n#### Example\r\n\r\nThat is for the following interface.\r\n\r\n```\r\ninterface FakeRest {\r\n    @GET(\"/posts\")\r\n    Call<ResponseBody> posts();\r\n    @GET(\"/posts/{post-id}\")\r\n    Call<ResponseBody> post(@Path(\"post-id\") int postId);\r\n    @GET(\"/posts/{post-id}/comments\")\r\n    Call<ResponseBody> postComments(@Path(\"post-id\") int postId);\r\n}\r\n```\r\n\r\nI would like to access the method or a pre-built request/call context that the `EventListener` can access. I've played around with the Retrofit builder using `Call.Factory`, `CallAdapter.Factory` but unfortunately I didn't find a way to capture this information and to pass it in the HTTP Call Request.\r\n\r\nI noticed the `tag` field in OkHttp's `Request`, I know it's not documented for this kind of usage, but it would helped me to bootstrap the idea.\r\n\r\n#### What I tried (and it's currently ugly and inelegant) :\r\n\r\nHave a built retrofit.\r\n\r\n```java\r\nRetrofit retrofit = new Retrofit.Builder().baseUrl(\"https://jsonplaceholder.typicode.com/\").build();\r\n```\r\n\r\n_Decorate_ each `CallAdapter.Factory` in a new Retrofit created form the original one, and capture path information from annotations (possibly use `baseUrl` as well).\r\n\r\n```\r\nRetrofit.Builder newBuilder = retrofit.newBuilder();\r\nfor (Factory callAdapterFactory : retrofit.callAdapterFactories()) {\r\n    newBuilder.addCallAdapterFactory(new Factory() {\r\n        @Override\r\n        public CallAdapter<Object, Object> get(Type returnType, Annotation[] annotations, Retrofit retrofit) {\r\n            String normalizedPath = normalizedPathFrom(annotations);\r\n            CallAdapter<Object, Object> callAdapter = (CallAdapter<Object, Object>) callAdapterFactory.get(returnType, annotations, retrofit);\r\n            return new CallAdapter<Object, Object>() {\r\n                ...\r\n                @Override\r\n                public Object adapt(Call<Object> call) {\r\n                    return callAdapter.adapt(wrapCall(call));\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nretrofit = newBuilder.build();\r\n```\r\n\r\nBut the thing here is that I don't get how to pass it to an OkHttp `Request`. The `Call` received in the `adapt` method cannot be modified, wrapping it won't work, because internally (in `OkHttpCall`) retrofit will build his own immutable request that will be used for executing or enqueuing the actual request. Cloning is of course out of question, and duplicating it appears impossible because the constructors are not public.\r\n\r\n------------\r\n\r\nUsing the `Call.Factory` is no help, because the this interface receives a pre-built request, so I cannot introduce a `Call.Factory` decorator that capture the necessary annotations and pass them in the request tag.\r\n\r\nTo be able to customize request, I believe that either `RequestBuilder` could be made an interface (and making the according modifications), or that `RequestBuilder` accept some sort of `RequestCustomizer` that can access the **route context**, either headers, path, query param names, interface method name, etc. and pass it to the OkHttp `Request`.\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2722",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2722/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2722/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2722/events",
    "html_url": "https://github.com/square/retrofit/issues/2722",
    "id": 309398756,
    "node_id": "MDU6SXNzdWUzMDkzOTg3NTY=",
    "number": 2722,
    "title": "Met lots of class loading/unloading when using default methods",
    "user": {
      "login": "kojilin",
      "id": 863983,
      "node_id": "MDQ6VXNlcjg2Mzk4Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/863983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kojilin",
      "html_url": "https://github.com/kojilin",
      "followers_url": "https://api.github.com/users/kojilin/followers",
      "following_url": "https://api.github.com/users/kojilin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kojilin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kojilin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kojilin/subscriptions",
      "organizations_url": "https://api.github.com/users/kojilin/orgs",
      "repos_url": "https://api.github.com/users/kojilin/repos",
      "events_url": "https://api.github.com/users/kojilin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kojilin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-28T14:45:04Z",
    "updated_at": "2018-04-12T08:47:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "What kind of issue is this?\r\n\r\n - [x] Feature Request. Start by telling us what problem you’re trying to solve. Often a solution\r\n       already exists! Don’t send pull requests to implement new features without first getting our\r\n       support. Sometimes we leave features out on purpose to keep the project small.\r\n\r\nWe are using default method to omit some default parameters, but we met lots of class loading/unloading in our environment(1.8.0_121, G1GC). Looks like after each young gc will make it recreate `LambdaForm$BMH` or `LambdaForm$DMH` in next request. I enabled -XX:+TraceClassLoading and -XX:+TraceClassUnloading.\r\n\r\n```\r\n[Unloading class java.lang.invoke.LambdaForm$BMH/2110450308 0x00000007c1746c28]\r\n[Unloading class java.lang.invoke.LambdaForm$BMH/1598730347 0x00000007c1746828]\r\n[Unloading class java.lang.invoke.LambdaForm$BMH/1380181431 0x00000007c1746428]\r\n[Unloading class java.lang.invoke.LambdaForm$BMH/1090809169 0x00000007c1746028]\r\n[Unloading class java.lang.invoke.LambdaForm$BMH/1828313973 0x00000007c1745c28]\r\n[Unloading class java.lang.invoke.LambdaForm$DMH/1545216975 0x00000007c1745828]\r\n[Unloading class java.lang.invoke.LambdaForm$DMH/829703186 0x00000007c1745428]\r\n...\r\n```\r\n\r\nMaybe it needs to cache like serviceMethodCache?\r\n\r\n--\r\n\r\nUpdate with test case(Test in jdk1.8.0_162):\r\nhttps://gist.github.com/kojilin/cd13940f2f8b2a06220b20efe7eab264\r\nrun with -XX:+TraceClassLoading -XX:+TraceClassUnloading\r\n* `unloadingCase` will have many `[Loaded java.lang.invoke.LambdaForm$DMH/`\r\nand if we force it to run GC, it will have lots of `[Unloading class java.lang.invoke.LambdaForm$BMH`.\r\n* `safeCase` won't have that problem. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2719",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2719/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2719/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2719/events",
    "html_url": "https://github.com/square/retrofit/issues/2719",
    "id": 309187025,
    "node_id": "MDU6SXNzdWUzMDkxODcwMjU=",
    "number": 2719,
    "title": "Abandon JSR 305 for some other annotations",
    "user": {
      "login": "JakeWharton",
      "id": 66577,
      "node_id": "MDQ6VXNlcjY2NTc3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/66577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JakeWharton",
      "html_url": "https://github.com/JakeWharton",
      "followers_url": "https://api.github.com/users/JakeWharton/followers",
      "following_url": "https://api.github.com/users/JakeWharton/following{/other_user}",
      "gists_url": "https://api.github.com/users/JakeWharton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JakeWharton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JakeWharton/subscriptions",
      "organizations_url": "https://api.github.com/users/JakeWharton/orgs",
      "repos_url": "https://api.github.com/users/JakeWharton/repos",
      "events_url": "https://api.github.com/users/JakeWharton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JakeWharton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 303355054,
        "node_id": "MDU6TGFiZWwzMDMzNTUwNTQ=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Enhancement",
        "name": "Enhancement",
        "color": "c7def8",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-28T01:13:58Z",
    "updated_at": "2018-04-23T19:05:33Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "JSR 305 is a broken non-standard that will slowly die and which doesn't work with Kotlin by default. Rather than prolong its life, let's flip our role and become a harbinger of its death."
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2710",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2710/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2710/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2710/events",
    "html_url": "https://github.com/square/retrofit/issues/2710",
    "id": 308234824,
    "node_id": "MDU6SXNzdWUzMDgyMzQ4MjQ=",
    "number": 2710,
    "title": "Please provide a message for this AssertionError",
    "user": {
      "login": "rupinderjeet",
      "id": 14011726,
      "node_id": "MDQ6VXNlcjE0MDExNzI2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14011726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rupinderjeet",
      "html_url": "https://github.com/rupinderjeet",
      "followers_url": "https://api.github.com/users/rupinderjeet/followers",
      "following_url": "https://api.github.com/users/rupinderjeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/rupinderjeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rupinderjeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rupinderjeet/subscriptions",
      "organizations_url": "https://api.github.com/users/rupinderjeet/orgs",
      "repos_url": "https://api.github.com/users/rupinderjeet/repos",
      "events_url": "https://api.github.com/users/rupinderjeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rupinderjeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-24T06:50:47Z",
    "updated_at": "2018-03-26T17:29:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The `onFailure()` method provides a `Throwable` with null message. It is very hard to trace this issue because the JIT compiler will optimize away stack traces in certain exceptions if they happen enough. The JVM flag `-XX:-OmitStackTraceInFastThrow` prevents this behavior and provides stack-traces for such exceptions [as mentioned here](https://stackoverflow.com/a/2070568/3682535).\r\n \r\nhttps://github.com/square/retrofit/blob/522592bb11fc8aa1ee491c3e7a1fe55675c372cd/retrofit/src/main/java/retrofit2/RequestBuilder.java#L90-L93\r\n\r\nOnce the error was visible, it was very easy to trace. Please add a message to suggest user to place `@Path` parameters before `@Query`/`@QueryMap` parameters.\r\n\r\nAlso, is there any preference in usage order of `@HeaderMap` and `@Path`?"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2708",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2708/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2708/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2708/events",
    "html_url": "https://github.com/square/retrofit/issues/2708",
    "id": 308007214,
    "node_id": "MDU6SXNzdWUzMDgwMDcyMTQ=",
    "number": 2708,
    "title": "HTTP FAILED: java.net.SocketException: Socket closed",
    "user": {
      "login": "LeeTech",
      "id": 18023710,
      "node_id": "MDQ6VXNlcjE4MDIzNzEw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/18023710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LeeTech",
      "html_url": "https://github.com/LeeTech",
      "followers_url": "https://api.github.com/users/LeeTech/followers",
      "following_url": "https://api.github.com/users/LeeTech/following{/other_user}",
      "gists_url": "https://api.github.com/users/LeeTech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LeeTech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LeeTech/subscriptions",
      "organizations_url": "https://api.github.com/users/LeeTech/orgs",
      "repos_url": "https://api.github.com/users/LeeTech/repos",
      "events_url": "https://api.github.com/users/LeeTech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LeeTech/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 273285289,
        "node_id": "MDU6TGFiZWwyNzMyODUyODk=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Needs%20Info",
        "name": "Needs Info",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-23T12:14:11Z",
    "updated_at": "2018-06-28T20:28:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "D/OkHttp: <-- HTTP FAILED: java.net.SocketException: Socket closed\r\n\r\nRetrofit+Rxjava has no error callback.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2701",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2701/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2701/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2701/events",
    "html_url": "https://github.com/square/retrofit/pull/2701",
    "id": 306283741,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1NzczOTk0",
    "number": 2701,
    "title": "Example showing onNext contract violation.",
    "user": {
      "login": "lassem",
      "id": 116084,
      "node_id": "MDQ6VXNlcjExNjA4NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/116084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lassem",
      "html_url": "https://github.com/lassem",
      "followers_url": "https://api.github.com/users/lassem/followers",
      "following_url": "https://api.github.com/users/lassem/following{/other_user}",
      "gists_url": "https://api.github.com/users/lassem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lassem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lassem/subscriptions",
      "organizations_url": "https://api.github.com/users/lassem/orgs",
      "repos_url": "https://api.github.com/users/lassem/repos",
      "events_url": "https://api.github.com/users/lassem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lassem/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-18T21:20:28Z",
    "updated_at": "2018-03-19T15:33:32Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/square/retrofit/pulls/2701",
      "html_url": "https://github.com/square/retrofit/pull/2701",
      "diff_url": "https://github.com/square/retrofit/pull/2701.diff",
      "patch_url": "https://github.com/square/retrofit/pull/2701.patch"
    },
    "body": "In reference to PR #2621 \r\n\r\nI had to pull in the RxJava2-Extension library in order to showcase this, maybe you have other means of detecting this.\r\n\r\nIn order to trigger this defect you have to use the `createWithScheduler` method.\r\n\r\nRunning the test below would yield:\r\n```\r\nMar 18, 2018 10:11:28 PM okhttp3.mockwebserver.MockWebServer$2 execute\r\nINFO: MockWebServer[50114] starting to accept connections\r\nMar 18, 2018 10:11:28 PM okhttp3.mockwebserver.MockWebServer$3 processOneRequest\r\nINFO: MockWebServer[50114] received request: GET / HTTP/1.1 and responded: HTTP/1.1 200 OK\r\nhu.akarnokd.rxjava2.debug.validator.NullOnNextParameterException\r\n\tat hu.akarnokd.rxjava2.debug.validator.ObservableValidator$ValidatorConsumer.onNext(ObservableValidator.java:77)\r\n\tat io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver.onNext(ObservableSubscribeOn.java:58)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(BodyObservable.java:51)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(BodyObservable.java:37)\r\n\tat retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:44)\r\n\tat io.reactivex.Observable.subscribe(Observable.java:10903)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n\tat io.reactivex.Observable.subscribe(Observable.java:10903)\r\n\tat io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n\tat io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:452)\r\n\tat io.reactivex.schedulers.TestScheduler.triggerActions(TestScheduler.java:116)\r\n\tat io.reactivex.schedulers.TestScheduler.triggerActions(TestScheduler.java:101)\r\n\tat retrofit2.adapter.rxjava2.NullBodyTest.nullBody(NullBodyTest.java:41)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nException in thread \"main\" hu.akarnokd.rxjava2.debug.validator.NullOnNextParameterException\r\n\tat hu.akarnokd.rxjava2.debug.validator.ObservableValidator$ValidatorConsumer.onNext(ObservableValidator.java:77)\r\n\tat io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver.onNext(ObservableSubscribeOn.java:58)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(BodyObservable.java:51)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable$BodyObserver.onNext(BodyObservable.java:37)\r\n\tat retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:44)\r\n\tat io.reactivex.Observable.subscribe(Observable.java:10903)\r\n\tat retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n\tat io.reactivex.Observable.subscribe(Observable.java:10903)\r\n\tat io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n\tat io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:452)\r\n\tat io.reactivex.schedulers.TestScheduler.triggerActions(TestScheduler.java:116)\r\n\tat io.reactivex.schedulers.TestScheduler.triggerActions(TestScheduler.java:101)\r\n\tat retrofit2.adapter.rxjava2.NullBodyTest.nullBody(NullBodyTest.java:41)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nMar 18, 2018 10:11:28 PM okhttp3.mockwebserver.MockWebServer$2 acceptConnections\r\nINFO: MockWebServer[50114] done accepting connections: Socket closed\r\n```"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2696",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2696/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2696/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2696/events",
    "html_url": "https://github.com/square/retrofit/issues/2696",
    "id": 305766385,
    "node_id": "MDU6SXNzdWUzMDU3NjYzODU=",
    "number": 2696,
    "title": "Headers parameter annotation for okhttp3.Headers",
    "user": {
      "login": "NightlyNexus",
      "id": 4032667,
      "node_id": "MDQ6VXNlcjQwMzI2Njc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4032667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NightlyNexus",
      "html_url": "https://github.com/NightlyNexus",
      "followers_url": "https://api.github.com/users/NightlyNexus/followers",
      "following_url": "https://api.github.com/users/NightlyNexus/following{/other_user}",
      "gists_url": "https://api.github.com/users/NightlyNexus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NightlyNexus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NightlyNexus/subscriptions",
      "organizations_url": "https://api.github.com/users/NightlyNexus/orgs",
      "repos_url": "https://api.github.com/users/NightlyNexus/repos",
      "events_url": "https://api.github.com/users/NightlyNexus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NightlyNexus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-16T00:43:01Z",
    "updated_at": "2018-03-16T00:43:01Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "There's no way to do `@HeaderMap Map<String, List<String>> headers` as a parameter right now. (Maybe that should be allowed? I can open a separate issue or PR later.)\r\n\r\nHow about a way to pass in okhttp3.Headers? (even easier to implement with https://github.com/square/okhttp/issues/3923)\r\n\r\nI'm not sure what the annotation name would be. There's already the method annotation `@Headers`."
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2694",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2694/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2694/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2694/events",
    "html_url": "https://github.com/square/retrofit/issues/2694",
    "id": 305739454,
    "node_id": "MDU6SXNzdWUzMDU3Mzk0NTQ=",
    "number": 2694,
    "title": "Unused custom annotations on method parameters should fail matching for default string converter.",
    "user": {
      "login": "NightlyNexus",
      "id": 4032667,
      "node_id": "MDQ6VXNlcjQwMzI2Njc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4032667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NightlyNexus",
      "html_url": "https://github.com/NightlyNexus",
      "followers_url": "https://api.github.com/users/NightlyNexus/followers",
      "following_url": "https://api.github.com/users/NightlyNexus/following{/other_user}",
      "gists_url": "https://api.github.com/users/NightlyNexus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NightlyNexus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NightlyNexus/subscriptions",
      "organizations_url": "https://api.github.com/users/NightlyNexus/orgs",
      "repos_url": "https://api.github.com/users/NightlyNexus/repos",
      "events_url": "https://api.github.com/users/NightlyNexus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NightlyNexus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-15T22:21:10Z",
    "updated_at": "2018-03-15T23:08:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "`@GET(\"/\") Call<ResponseBody> queryParameter(@Foo @Query(\"foo\") Object foo);`\r\nThis method currently will work without a custom string converter. The built-in string converter will simply call foo.toString(), and `@Foo` will be silently ignored.  (...apparently, my first GH issue on Retrofit.)"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2678",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2678/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2678/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2678/events",
    "html_url": "https://github.com/square/retrofit/issues/2678",
    "id": 301069839,
    "node_id": "MDU6SXNzdWUzMDEwNjk4Mzk=",
    "number": 2678,
    "title": "Custom converter with @Multipart adds extra payload header",
    "user": {
      "login": "jaychang0917",
      "id": 5347535,
      "node_id": "MDQ6VXNlcjUzNDc1MzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5347535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaychang0917",
      "html_url": "https://github.com/jaychang0917",
      "followers_url": "https://api.github.com/users/jaychang0917/followers",
      "following_url": "https://api.github.com/users/jaychang0917/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaychang0917/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaychang0917/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaychang0917/subscriptions",
      "organizations_url": "https://api.github.com/users/jaychang0917/orgs",
      "repos_url": "https://api.github.com/users/jaychang0917/repos",
      "events_url": "https://api.github.com/users/jaychang0917/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaychang0917/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-28T15:33:38Z",
    "updated_at": "2018-03-20T04:17:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I try to write a `Converter` to covert `File` to `MultipartBody.Part`, but payload header is duplicated.\r\n\r\n**api**\r\n```kotlin\r\n @Multipart\r\n @POST(\"api/upload\")\r\n fun uploadPhoto(@Part(\"file\") file: File): Observable<Image>\r\n```\r\n\r\n**converter**\r\n```kotlin\r\nclass FileConverterFactory : Converter.Factory() {\r\n\r\n  companion object {\r\n    @JvmStatic\r\n    fun create(): FileConverterFactory {\r\n      return FileConverterFactory()\r\n    }\r\n  }\r\n\r\n  override fun requestBodyConverter(type: Type, parameterAnnotations: Array<out Annotation>, methodAnnotations: Array<out Annotation>, retrofit: Retrofit): Converter<*, RequestBody>? {\r\n    val isFileType = isFileType(type)\r\n\r\n    if (!isFileType) {\r\n      return null\r\n    }\r\n\r\n    val annotation = parameterAnnotations.find { annotation -> annotation is Part } as Part\r\n\r\n    return Converter<Any, RequestBody> { value ->\r\n      createMultipartBody(listOf(value as File), annotation)\r\n    }\r\n  }\r\n\r\n  private fun isFileType(type: Type): Boolean {\r\n    return type == File::class.java\r\n  }\r\n\r\n  private fun createMultipartBody(file: File, annotation: Part): MultipartBody {\r\n    val part = MultipartBody.Part.createFormData(annotation.value, file.name, RequestBody.create(MediaType.parse(Utils.getMimeType(file)), file))\r\n\r\n    val builder = MultipartBody.Builder()\r\n\r\n    builder.setType(MultipartBody.FORM)\r\n\r\n    builder.addPart(part)\r\n\r\n    return builder.build()\r\n  }\r\n\r\n}\r\n```\r\n\r\n**The result**\r\n```kotlin\r\n--d11896d9-49e1-4106-8c2a-b10cdba86a0b\r\nContent-Disposition: form-data; name=\"file\"\r\nContent-Transfer-Encoding: binary\r\nContent-Type: multipart/form-data; boundary=72e7111d-be41-446f-9a4e-359dcd157c8a\r\nContent-Length: 6879\r\n\r\n--72e7111d-be41-446f-9a4e-359dcd157c8a\r\nContent-Disposition: form-data; name=\"file\"; filename=\"IMG_20170725_015923.jpg\"\r\nContent-Type: image/jpeg\r\nContent-Length: 6664\r\n\r\n����\u0001oExifMM*\b\u0007\u00012\u0002\u0014b\u0001\u0012\u0003\u0001\u0001\u0001\u0010\u0002,v\u0001\u0004\u0001\u0001�i\u0004\u0001�\u0001\u0001\u0004\u0001\u0001�\u0001\u000f\u0002\u000b�20...\r\n```\r\n\r\n**What i expect**\r\n```kotlin\r\n--72e7111d-be41-446f-9a4e-359dcd157c8a\r\nContent-Disposition: form-data; name=\"file\"; filename=\"IMG_20170725_015923.jpg\"\r\nContent-Type: image/jpeg\r\nContent-Length: 6664\r\n\r\n����\u0001oExifMM*\b\u0007\u00012\u0002\u0014b\u0001\u0012\u0003\u0001\u0001\u0001\u0010\u0002,v\u0001\u0004\u0001\u0001�i\u0004\u0001�\u0001\u0001\u0004\u0001\u0001�\u0001\u000f\u0002\u000b�20...\r\n```\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2675",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2675/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2675/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2675/events",
    "html_url": "https://github.com/square/retrofit/issues/2675",
    "id": 300173679,
    "node_id": "MDU6SXNzdWUzMDAxNzM2Nzk=",
    "number": 2675,
    "title": "OkHttpClient: A connection to https://ww.xxxx.com/ was leaked. Did you forget to close a",
    "user": {
      "login": "irfanswat11",
      "id": 11749257,
      "node_id": "MDQ6VXNlcjExNzQ5MjU3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11749257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/irfanswat11",
      "html_url": "https://github.com/irfanswat11",
      "followers_url": "https://api.github.com/users/irfanswat11/followers",
      "following_url": "https://api.github.com/users/irfanswat11/following{/other_user}",
      "gists_url": "https://api.github.com/users/irfanswat11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/irfanswat11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/irfanswat11/subscriptions",
      "organizations_url": "https://api.github.com/users/irfanswat11/orgs",
      "repos_url": "https://api.github.com/users/irfanswat11/repos",
      "events_url": "https://api.github.com/users/irfanswat11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/irfanswat11/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 273285289,
        "node_id": "MDU6TGFiZWwyNzMyODUyODk=",
        "url": "https://api.github.com/repos/square/retrofit/labels/Needs%20Info",
        "name": "Needs Info",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-02-26T09:58:49Z",
    "updated_at": "2018-03-14T16:00:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "OKHttpClient in Retrofit is leaking the connection. I saw somewhere retrofit is already handling to close OKHttp connection [See JakeWharton commented on Dec 26, 2015](https://github.com/square/okhttp/issues/2158) \r\n\r\n` @Override\r\n            public void onNext(Response<UserProfile> userProfileResponse) {\r\n                UserProfile userProfile = userProfileResponse.body();\r\n                EmailTextView.setText(\"Email Address: \"+userProfile.getEmailAddress());\r\n                totalEmailsTextView.setText(\"Total Emails: \"+userProfile.getMessagesTotal());\r\n                totalThreadsTextView.setText(\"Total Threads: \"+userProfile.getThreadsTotal());\r\n                }` \r\n\r\n\r\nPlease fix this issue. \r\n"
  },
  {
    "url": "https://api.github.com/repos/square/retrofit/issues/2470",
    "repository_url": "https://api.github.com/repos/square/retrofit",
    "labels_url": "https://api.github.com/repos/square/retrofit/issues/2470/labels{/name}",
    "comments_url": "https://api.github.com/repos/square/retrofit/issues/2470/comments",
    "events_url": "https://api.github.com/repos/square/retrofit/issues/2470/events",
    "html_url": "https://github.com/square/retrofit/issues/2470",
    "id": 254613222,
    "node_id": "MDU6SXNzdWUyNTQ2MTMyMjI=",
    "number": 2470,
    "title": "The position of the parameter affects the use？ I have three parameters @Header,@QueryMap,@Url. I put \"@URL\" parameter on the last one useless, put the first one useful.why?",
    "user": {
      "login": "mtf7101520",
      "id": 7651267,
      "node_id": "MDQ6VXNlcjc2NTEyNjc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7651267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mtf7101520",
      "html_url": "https://github.com/mtf7101520",
      "followers_url": "https://api.github.com/users/mtf7101520/followers",
      "following_url": "https://api.github.com/users/mtf7101520/following{/other_user}",
      "gists_url": "https://api.github.com/users/mtf7101520/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mtf7101520/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mtf7101520/subscriptions",
      "organizations_url": "https://api.github.com/users/mtf7101520/orgs",
      "repos_url": "https://api.github.com/users/mtf7101520/repos",
      "events_url": "https://api.github.com/users/mtf7101520/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mtf7101520/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/square/retrofit/milestones/6",
      "html_url": "https://github.com/square/retrofit/milestone/6",
      "labels_url": "https://api.github.com/repos/square/retrofit/milestones/6/labels",
      "id": 3142274,
      "node_id": "MDk6TWlsZXN0b25lMzE0MjI3NA==",
      "number": 6,
      "title": "2.4",
      "description": "",
      "creator": {
        "login": "swankjesse",
        "id": 133019,
        "node_id": "MDQ6VXNlcjEzMzAxOQ==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/133019?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/swankjesse",
        "html_url": "https://github.com/swankjesse",
        "followers_url": "https://api.github.com/users/swankjesse/followers",
        "following_url": "https://api.github.com/users/swankjesse/following{/other_user}",
        "gists_url": "https://api.github.com/users/swankjesse/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/swankjesse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/swankjesse/subscriptions",
        "organizations_url": "https://api.github.com/users/swankjesse/orgs",
        "repos_url": "https://api.github.com/users/swankjesse/repos",
        "events_url": "https://api.github.com/users/swankjesse/events{/privacy}",
        "received_events_url": "https://api.github.com/users/swankjesse/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 7,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2018-02-26T02:46:20Z",
      "updated_at": "2018-02-26T04:16:56Z",
      "due_on": "2018-03-30T07:00:00Z",
      "closed_at": null
    },
    "comments": 4,
    "created_at": "2017-09-01T11:28:25Z",
    "updated_at": "2018-02-26T02:53:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "What kind of issue is this?\r\n\r\n - [x] Question. This issue tracker is not the place for questions. If you want to ask how to do\r\n       something, or to understand why something isn't working the way you expect it to, use Stack\r\n       Overflow. https://stackoverflow.com/questions/tagged/retrofit\r\n\r\n - [ ] Bug report. If you’ve found a bug, spend the time to write a failing test. Bugs with tests\r\n       get fixed. Here’s an example: https://gist.github.com/swankjesse/6608b4713ad80988cdc9\r\n\r\n - [ ] Feature Request. Start by telling us what problem you’re trying to solve. Often a solution\r\n       already exists! Don’t send pull requests to implement new features without first getting our\r\n       support. Sometimes we leave features out on purpose to keep the project small.\r\n"
  }
]