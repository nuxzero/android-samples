apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tool_version
    defaultConfig {
        applicationId "com.example.nux.news"
        targetSdkVersion traget_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorSelection "newsapp", "dev"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "newsapp"
    productFlavors {
        dev {
            dimension "newsapp"
            minSdkVersion dev_min_sdk_version
            resConfigs "en", "xxhdpi"
        }
        prod {
            dimension "newsapp"
            minSdkVersion prod_min_sdk_version
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Enable data binding
    dataBinding {
        enabled = true
    }
}

// Share code and resources in testShared between test and androidTest directories
android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/testShared/java"
        resources.srcDirs += "$projectDir/src/testShared/resources"
    }

    androidTest {
        java.srcDirs += "$projectDir/src/testShared/java"
        resources.srcDirs += "$projectDir/src/testShared/resources"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:appcompat-v7:$android_support_version"

    // Material components
    implementation "com.android.support:cardview-v7:$android_support_version"
    implementation "com.android.support:recyclerview-v7:$android_support_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Architecture components
    implementation "android.arch.lifecycle:runtime:$arch_version"
    implementation "android.arch.lifecycle:extensions:$arch_version"
    kapt "android.arch.lifecycle:compiler:$arch_version"

    // Data binding
    kapt "com.android.databinding:compiler:$gradle_version"

    // Room Persistence
    implementation "android.arch.persistence.room:runtime:$arch_version"
    implementation "android.arch.persistence.room:rxjava2:$arch_version"
    kapt "android.arch.persistence.room:compiler:$arch_version"
    testImplementation "android.arch.persistence.room:testing:$arch_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Rxjava
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Android test
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Unit test
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
}
